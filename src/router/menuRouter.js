export const menuRouter = [  {    path: '/login',    name: 'login',    component: () => import('@/views/login/loginIndex.vue')  },  {    path: '/register',    name: 'register',    component: () => import('@/views/login/loginIndex.vue')  },  {    path: '/home',    name: 'home',    meta: {      title: 'home'    },    component: () => import('@views/home/homeInit.vue')  },  // {  //   path: '/remark',  //   name: 'remark',  //   meta: {  //     title: 'remark'  //   },  //   component: () => import('@views/remark/remarkInit.vue')  // },  {    path: '/send',    name: 'send',    meta: {      title: 'send'    },    component: () => import('@views/send/sendSecond.vue')  },  {    path: '/article/:id',    name: 'article',    meta: {      title: 'article'    },    component: () => import('@views/article/articleIndex.vue')  }]/** * @param { Array } router 路由数组 * @param { String } parentPath 父级路由 path * @description 菜单路由数组 format * @return { Array } */export const menuRouterFormat = (router, parentPath) => {  return router.map(item => {    // 拼接路由，例：'devtools' -> '/devtools'  'regular' -> '/devtools/regular'    item.path = parentPath ? `${parentPath}/${item.path}` : `/${item.path}`    // 存在 children 属性，且 children 数组长度大于 0，开始递归    if (item.children && item.children.length > 0) {      item.children = menuRouterFormat(item.children, item.path)    }    return Object.assign({}, item, item.meta || {})  })}// 解析后 路由菜单列表export const menuRouterFormatList = menuRouterFormat([...menuRouter])